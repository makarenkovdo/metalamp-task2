/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/components/dropdown/dropdown.js":
/*!*********************************************!*\
  !*** ./src/components/dropdown/dropdown.js ***!
  \*********************************************/
/***/ (() => {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Dropdown = /*#__PURE__*/function () {\n  function Dropdown(number) {\n    _classCallCheck(this, Dropdown);\n\n    this.isDropdownOpen = false;\n    this.$dropdownInstanceNumber = document.querySelector(\".js-dropdown_instance-number\");\n    this.instance = number;\n    this.$type = document.querySelector(\".js-dropdown_instance-\".concat(number, \"_type\")).innerHTML;\n    this.$dropdownClearSelector = document.querySelector(\".js-dropdown_instance-\".concat(this.instance, \"__clear\"));\n    this.$dropdownApplySelector = document.querySelector(\".js-dropdown_instance-\".concat(this.instance, \"__apply\"));\n    this.$buttonSelector = document.querySelector(\".js-dropdown_instance-\".concat(this.instance, \"__button\"));\n    this.$dropdownContainerImg = document.querySelector(\".js-dropdown_instance-\".concat(this.instance, \"__img-box\"));\n    this.$dropdownContainer = document.querySelector(\".js-dropdown_instance-\".concat(this.instance));\n    this.$dropdownPopupContainer = document.querySelector(\".js-dropdown_instance-\".concat(this.instance, \"__popup\"));\n    this.$dropdownText = document.querySelector(\".js-dropdown_instance-\".concat(this.instance, \"__text\"));\n    this.$counterSelector1 = document.querySelector(\".js-dropdown_instance-\".concat(this.instance, \"__counter1\"));\n    this.$counterSelector2 = document.querySelector(\".js-dropdown_instance-\".concat(this.instance, \"__counter2\"));\n    this.$counterSelector3 = document.querySelector(\".js-dropdown_instance-\".concat(this.instance, \"__counter3\"));\n    this.$decreaseSelector = ['', //for starting since 1st index\n    document.querySelector(\".js-dropdown_instance-\".concat(this.instance, \"__decrease1\")), document.querySelector(\".js-dropdown_instance-\".concat(this.instance, \"__decrease2\")), document.querySelector(\".js-dropdown_instance-\".concat(this.instance, \"__decrease3\"))];\n    this.$increaseSelector = ['', //for starting since 1st index\n    document.querySelector(\".js-dropdown_instance-\".concat(this.instance, \"__increase1\")), document.querySelector(\".js-dropdown_instance-\".concat(this.instance, \"__increase2\")), document.querySelector(\".js-dropdown_instance-\".concat(this.instance, \"__increase3\"))];\n    this.dropdownCounter = this.makeDropdownCounter();\n  }\n\n  _createClass(Dropdown, [{\n    key: \"handleDropdownClick\",\n    value: function handleDropdownClick() {\n      this.isDropdownOpen ? closeDropdownBox.call(this) : openDropdownBox.call(this);\n\n      function closeDropdownBox() {\n        this.$dropdownPopupContainer.classList.add('hide');\n        this.isDropdownOpen = false;\n      }\n\n      function openDropdownBox() {\n        var x = this.$dropdownContainer.offsetLeft;\n        var y = this.$dropdownContainer.offsetTop + this.$dropdownContainer.offsetHeight;\n        this.$dropdownPopupContainer.style.cssText = \"left:\".concat(x, \"px; top: \").concat(y, \"px; \");\n        this.$dropdownPopupContainer.classList.remove('hide');\n        this.isDropdownOpen = true;\n      }\n    }\n  }, {\n    key: \"makeDropdownCounter\",\n    value: function makeDropdownCounter() {\n      var counter = [0, 0, 0, 0]; //counter[0] is a sum of counters\n\n      var guestWordEnding = 'ь';\n      var bedroomWordEnding = 'ен';\n      var bedWordEnding = 'ей';\n\n      function setWordEnding(counter, guestWordEnding, bedroomWordEnding, bedWordEnding) {\n        if (counter[0] > 1 && counter[0] < 5) {\n          guestWordEnding = 'я';\n        }\n\n        if (counter[1] > 1 && counter[1] < 5) {\n          bedroomWordEnding = 'ьни';\n        }\n\n        if (counter[2] > 1 && counter[2] < 5) {\n          bedWordEnding = 'и';\n        }\n\n        if (counter[0] >= 5 || counter[0] < 1) {\n          guestWordEnding = 'ей';\n        }\n\n        if (counter[1] >= 5 || counter[1] < 1) {\n          bedroomWordEnding = 'ен';\n        }\n\n        if (counter[2] >= 5 || counter[2] < 1) {\n          bedWordEnding = 'ей';\n        }\n\n        if (counter[0] === 1) {\n          guestWordEnding = 'ь';\n        }\n\n        if (counter[1] === 1) {\n          bedroomWordEnding = 'ьня';\n        }\n\n        if (counter[2] === 1) {\n          bedWordEnding = 'ь';\n        }\n\n        return [guestWordEnding, bedroomWordEnding, bedWordEnding];\n      }\n\n      return function (shift, j) {\n        if (shift === 0) {\n          // console.log(this)\n          counter = [0, 0, 0, 0];\n        }\n\n        if (counter[j] === 0 && shift < 0) {\n          return counter[j];\n        } else {\n          counter[j] += shift;\n          counter[0] += shift;\n\n          var _ref = _toConsumableArray(setWordEnding(counter, guestWordEnding, bedroomWordEnding, bedWordEnding));\n\n          guestWordEnding = _ref[0];\n          bedroomWordEnding = _ref[1];\n          bedWordEnding = _ref[2];\n          this.$counterSelector1.innerHTML = counter[1];\n          this.$counterSelector2.innerHTML = counter[2];\n          this.$counterSelector3.innerHTML = counter[3];\n          console.log('this', this, 'this instance', this.instance, 'this type', this.$type); // console.log(\n          //     'selector',\n          //     document.querySelector(\n          //         `.js-dropdown_instance-${this.instance}_type`\n          //     ).innerHTML\n          // )\n\n          if (this.$type === 'room') {\n            this.$dropdownText.innerHTML = \"\".concat(counter[1], \" \\u0441\\u043F\\u0430\\u043B\").concat(bedroomWordEnding, \", \").concat(counter[2], \" \\u043A\\u0440\\u043E\\u0432\\u0430\\u0442\").concat(bedWordEnding);\n          } else {\n            if (counter[0] > 0) {\n              this.$dropdownClearSelector.classList.remove('hide');\n            } else {\n              this.$dropdownClearSelector.classList.add('hide');\n            }\n\n            this.$dropdownText.innerHTML = \"\".concat(counter[0], \" \\u0433\\u043E\\u0441\\u0442\").concat(guestWordEnding);\n          }\n        }\n      };\n    }\n  }]);\n\n  return Dropdown;\n}();\n\nfunction createDropdowns(n) {\n  var dropdownArray = new Array(n);\n\n  for (var i = 0; i < n; i++) {\n    dropdownArray[i] = new Dropdown(i + 1);\n    console.log(dropdownArray[i].$type);\n  }\n\n  return dropdownArray;\n}\n\nvar dropdownArray = createDropdowns(5);\n\nvar _loop = function _loop(i) {\n  dropdownArray[i].$buttonSelector.addEventListener('click', function () {\n    return dropdownArray[i].handleDropdownClick.call(dropdownArray[i]);\n  });\n\n  var _loop2 = function _loop2(j) {\n    dropdownArray[i].$increaseSelector[j].addEventListener('click', function () {\n      return dropdownArray[i].dropdownCounter.call(dropdownArray[i], 1, j);\n    });\n    dropdownArray[i].$decreaseSelector[j].addEventListener('click', function () {\n      return dropdownArray[i].dropdownCounter.call(dropdownArray[i], -1, j);\n    });\n  };\n\n  for (var j = 1; j <= 3; j++) {\n    _loop2(j);\n  }\n\n  if (!dropdownArray[i].$type) {\n    dropdownArray[i].$dropdownClearSelector.addEventListener('click', function () {\n      return dropdownArray[i].dropdownCounter.call(dropdownArray[i], 0, 0);\n    });\n    dropdownArray[i].$dropdownApplySelector.addEventListener('click', function () {\n      return dropdownArray[i].handleDropdownClick.call(dropdownArray[i]);\n    });\n  }\n};\n\nfor (var i = 0; i < dropdownArray.length; i++) {\n  _loop(i);\n}\n\n//# sourceURL=webpack://task2/./src/components/dropdown/dropdown.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/components/dropdown/dropdown.js"]();
/******/ 	
/******/ })()
;